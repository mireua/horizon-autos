{% extends 'base.html.twig' %}

{% block title %}User Management{% endblock %}

{% block stylesheets %}
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
{% endblock %}

{% block body %}
<div class="container">
    <h1 class="my-4 text-center">User Management</h1>
    <div class="row flex-lg-nowrap">
        <div class="col mb-3">
            <div class="e-panel card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th class="text-center">Name</th>
                                    <th class="text-center">Email</th>
                                    <th class="text-center">Role</th>
                                    <th class="text-center">Phone Number</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for user in users %}
                                <tr>
                                    <td class="text-center">{{ user.name }}</td>
                                    <td class="text-center">{{ user.email }}</td>
                                    <td class="text-center">{{ user.roles|join(', ') }}</td>
                                    <td class="text-center">{{ user.phone }}</td>
                                    <td class="text-center">
                                        <button class="btn btn-primary btn-sm" onclick="loadUserForm({{ user.id }})"
                                            {{ app.user.id == user.id ? 'disabled' : '' }}>Edit</button>
                                        <button class="btn btn-danger btn-sm" data-csrf="{{ csrf_token('delete_user' ~ user.id) }}" onclick="deleteUser({{ user.id }}, this.getAttribute('data-csrf'))"
                                            {{ app.user.id == user.id ? 'disabled' : '' }}>Delete</button>
                                        {% if 'ROLE_MANAGER' in app.user.roles and app.user.id != user.id %}
                                        <button class="btn btn-success btn-sm" onclick="promoteUser({{ user.id }})">Promote</button>
                                        <button class="btn btn-warning btn-sm" onclick="demoteUser({{ user.id }})">Demote</button>
                                        {% endif %}
                                    </td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for User Form -->
<div class="modal fade" id="user-form-modal" tabindex="-1" role="dialog" aria-labelledby="modelTitleId" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit User Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Ã—</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="edit-user-form">
                    <input type="hidden" id="edit-user-id" name="id">
                    <div class="form-group">
                        <label for="edit-email">Email</label>
                        <input type="email" class="form-control" id="edit-email" name="email">
                    </div>
                    <div class="form-group">
                        <label for="edit-name">Name</label>
                        <input type="text" class="form-control" id="edit-name" name="name">
                    </div>
                    <div class="form-group">
                        <label for="edit-phone">Phone Number</label>
                        <input type="text" class="form-control" id="edit-phone" name="phone">
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
    // Define a global JavaScript object for application data
    var app = {
        user: {
            id: {{ app.user.id }}
        }
    };
</script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
  function loadUserForm(userId) {
    const url = '{{ path('admin_fetch_user', {'id': 'USER_ID'}) }}'.replace('USER_ID', userId);
    fetch(url)
        .then(response => response.json())
        .then(data => {
            document.getElementById('edit-email').value = data.email;
            document.getElementById('edit-name').value = data.name;
            document.getElementById('edit-phone').value = data.phone;
            document.getElementById('edit-user-id').value = data.id; // Hidden input to store user ID for the update
            $('#user-form-modal').modal('show');
        })
        .catch(error => console.error('Error loading user data:', error));
  }

  document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('edit-user-form').addEventListener('submit', function(event) {
        event.preventDefault();
        const userId = document.getElementById('edit-user-id').value;
        const formData = new FormData(this);
        const url = '{{ path('admin_edit_account', {'id': 'USER_ID'}) }}'.replace('USER_ID', userId);

        fetch(url, {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (!response.ok) throw new Error('Failed to update user');
            $('#user-form-modal').modal('hide');
            location.reload(); // Optionally reload to see changes, or update the UI dynamically
        })
        .catch(error => console.error('Error updating user:', error));
    });
  });

  function deleteUser(userId, csrfToken) {
    if (app.user.id !== userId && confirm('Are you sure you want to delete this user?')) {
        const url = '{{ path('admin_delete_account', {'id': 'USER_ID'}) }}'.replace('USER_ID', userId);
        const formData = new FormData();
        formData.append('_token', csrfToken);

        fetch(url, {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            location.reload();
        })
        .catch(error => console.error('Error:', error));
    }
}


  function promoteUser(userId) {
      const url = '{{ path('admin_promote_account', {'id': 'USER_ID'}) }}'.replace('USER_ID', userId);
      fetch(url, { method: 'POST' })
          .then(() => location.reload())
          .catch(error => console.error('Error:', error));
  }

  function demoteUser(userId) {
      const url = '{{ path('admin_demote_account', {'id': 'USER_ID'}) }}'.replace('USER_ID', userId);
      fetch(url, { method: 'POST' })
          .then(() => location.reload())
          .catch(error => console.error('Error:', error));
  }
</script>
{% endblock %}
